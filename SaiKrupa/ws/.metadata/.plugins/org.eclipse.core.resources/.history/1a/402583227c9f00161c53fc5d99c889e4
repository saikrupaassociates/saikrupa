package com.saikrupa.app.service.report.impl;

import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.util.Date;

import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Font;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import com.saikrupa.app.service.report.ReportService;
import com.saikrupa.app.service.report.common.ReportPageHeader;

public class DefaultReportService implements ReportService {

	public DefaultReportService() {
		// TODO Auto-generated constructor stub
	}
	
	private void addHeader(PdfWriter writer) {
		ReportPageHeader header = new ReportPageHeader();
		writer.setPageEvent(header);
	}
	
	private Font getTableHeaderFont() {
		return FontFactory.getFont(FontFactory.COURIER_BOLD, 14, BaseColor.BLACK);
	}
	
	private void addPageTableContent(Document document) throws DocumentException {
		PdfPTable table = new PdfPTable(3);
		table.setHorizontalAlignment(horizontalAlignment);
		table.getDefaultCell().setBorder(2);
		table.getDefaultCell().setBackgroundColor(BaseColor.DARK_GRAY);
        PdfPCell header_OrderNo = new PdfPCell(new Phrase("Order Number"));
        PdfPCell header_OrderDate = new PdfPCell(new Phrase("Order Date"));
        PdfPCell header_OrderBy = new PdfPCell(new Phrase("Ordered By"));
        table.addCell(header_OrderNo);
        table.addCell(header_OrderDate);
        table.addCell(header_OrderBy);
        
        for(int i = 0; i < 10; i++) {
        	PdfPCell data_OrderNo = new PdfPCell(new Phrase(new String("1000 " + i)));
        	PdfPCell data_OrderDate = new PdfPCell(new Phrase("12/12/20016"));
        	PdfPCell data_OrderedBy = new PdfPCell(new Phrase("Prasun"));
        	table.addCell(data_OrderNo);
        	table.addCell(data_OrderDate);
        	table.addCell(data_OrderedBy);
        }
        document.add(table);
        
	}

	public Document createBlankDocument(final String reportFileName) {
		String FILE = "E:/Projects/"+reportFileName+".pdf";
		Document document = new Document();
		try {
			PdfWriter writer = PdfWriter.getInstance(document, new FileOutputStream(FILE));
			addHeader(writer);
			document.open();			
			addMetaData(document);		
			addPageTableContent(document);
			
		} catch (FileNotFoundException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (DocumentException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return document;
	}

	private static void addMetaData(Document document) {

		document.addTitle("Consolidated Order Report");
	}

	private static void addEmptyLine(Paragraph paragraph, int number) {
		for (int i = 0; i < number; i++) {
			paragraph.add(new Paragraph(" "));
		}
	}

	private static void addTitlePage(Document document) throws DocumentException {
		Paragraph preface = new Paragraph();
		// We add one empty line
		addEmptyLine(preface, 1);
		// Lets write a big header
		Font catFont = new Font(Font.FontFamily.TIMES_ROMAN, 14, Font.BOLD);
		Font smallBold = new Font(Font.FontFamily.TIMES_ROMAN, 12, Font.BOLD);
		preface.add(new Paragraph("Title of the document", catFont));

		addEmptyLine(preface, 1);
		// Will create: Report generated by: _name, _date
		preface.add(new Paragraph("Report generated by: " + System.getProperty("user.name") + ", " + new Date(), //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
				smallBold));
		addEmptyLine(preface, 3);
		preface.add(new Paragraph("This document describes something which is very important ", smallBold));

		addEmptyLine(preface, 8);
		Font redFont = new Font(Font.FontFamily.TIMES_ROMAN, 12, Font.NORMAL, BaseColor.RED);
		preface.add(new Paragraph(
				"This document is a preliminary version and not subject to your license agreement or any other agreement with vogella.com ;-).",
				redFont));

		document.add(preface);
		// Start a new page
		document.newPage();
	}
	
	public void test () {		
		Document pdfDocument = createBlankDocument("ConsolidatedOrderReport");
		pdfDocument.close();
		System.out.println("Done !!!");
		
	}
	
	public static void main(String[] test) {
		DefaultReportService service = new DefaultReportService();
		service.test();
		
	}
}
